{"version":3,"file":"lazy-for.umd.js","sources":["ng://lazy-for/lib/lazy-for.directive.ts","ng://lazy-for/lib/lazy-for.module.ts"],"sourcesContent":["import {\n  Directive,\n  DoCheck,\n  Input,\n  IterableDiffer,\n  IterableDiffers,\n  TemplateRef,\n  ViewContainerRef,\n} from \"@angular/core\";\n\n@Directive({\n  selector: \"[lazyFor]\",\n})\nexport class LazyForDirective implements DoCheck {\n  @Input(\"lazyForWithHeight\") itemHeight: number;\n  @Input(\"lazyForWithContainer\") containerElem: HTMLElement;\n  @Input(\"lazyForWithTagName\") itemTagName: string;\n\n  @Input()\n  set lazyForOf(list) {\n    this.list = list;\n\n    if (list) {\n      this.differ = this.iterableDiffers.find(list).create();\n\n      if (this.initialized) {\n        this.update();\n      }\n    }\n  }\n\n  private templateElem: HTMLElement;\n\n  private beforeListElem: HTMLElement;\n  private afterListElem: HTMLElement;\n\n  private list = [];\n\n  private initialized = false;\n  private firstUpdate = true;\n\n  private differ: IterableDiffer<any>;\n\n  private lastChangeTriggeredByScroll = false;\n\n  constructor(\n    private vcr: ViewContainerRef,\n    private tpl: TemplateRef<any>,\n    private iterableDiffers: IterableDiffers\n  ) {}\n\n  ngOnInit() {\n    this.templateElem = this.vcr.element.nativeElement;\n\n    if (this.containerElem === undefined) {\n      this.containerElem = this.templateElem.parentElement;\n    }\n\n    //Adding an event listener will trigger ngDoCheck whenever the event fires so we don't actually need to call\n    //update here.\n    this.containerElem.addEventListener(\"scroll\", (e) => {\n      this.lastChangeTriggeredByScroll = true;\n    });\n\n    this.initialized = true;\n  }\n\n  ngDoCheck() {\n    if (this.differ && Array.isArray(this.list)) {\n      if (this.lastChangeTriggeredByScroll) {\n        this.update();\n        this.lastChangeTriggeredByScroll = false;\n      } else {\n        let changes = this.differ.diff(this.list);\n\n        if (changes !== null) {\n          this.update();\n        }\n      }\n    }\n  }\n\n  // Clamps number within the inclusive lower and upper bounds.\n  private clamp(number: number, boundOne: number, boundTwo: number): number {\n    if (!boundTwo) {\n      return Math.max(number, boundOne) === boundOne ? number : boundOne; \n    } \n    \n    if (Math.min(number, boundOne) === number) {\n      return boundOne;\n    } \n    \n    if (Math.max(number, boundTwo) === number) {\n      return boundTwo;\n    }\n\n    return number;\n  }\n\n  private onFirstUpdate() {\n    let sampleItemElem: HTMLElement;\n\n    if (this.itemHeight === undefined || this.itemTagName === undefined) {\n      this.vcr.createEmbeddedView(this.tpl, { context: this.list[0], index: 0 });\n      sampleItemElem = <HTMLElement>this.templateElem.nextSibling;\n    }\n\n    if (this.itemHeight === undefined) {\n      this.itemHeight = sampleItemElem.clientHeight;\n    }\n\n    if (this.itemTagName === undefined) {\n      this.itemTagName = sampleItemElem.tagName;\n    }\n\n    this.beforeListElem = document.createElement(this.itemTagName);\n    this.templateElem.parentElement.insertBefore(this.beforeListElem, this.templateElem);\n\n    this.afterListElem = document.createElement(this.itemTagName);\n    //This inserts after the templateElem. see http://stackoverflow.com/a/4793630/373655 for details\n    this.templateElem.parentElement.insertBefore(this.afterListElem, this.templateElem.nextSibling);\n\n    if (this.itemTagName.toLowerCase() === 'li') {\n      this.beforeListElem.style.listStyleType = 'none';\n      this.afterListElem.style.listStyleType = 'none';\n    }\n\n    this.firstUpdate = false;\n  }\n\n  private update() {\n    if (this.list.length === 0) {\n      this.vcr.clear();\n      if (!this.firstUpdate) {\n        this.beforeListElem.style.height = '0';\n        this.afterListElem.style.height = '0';\n      }\n      return;\n    }\n\n    if (this.firstUpdate) {\n      this.onFirstUpdate();\n    }\n\n    let listHeight = this.containerElem.clientHeight;\n    let scrollTop = this.containerElem.scrollTop;\n\n    //The height of anything inside the container but above the lazyFor content;\n    let fixedHeaderHeight =\n      (this.beforeListElem.getBoundingClientRect().top - this.beforeListElem.scrollTop) -\n      (this.containerElem.getBoundingClientRect().top - this.beforeListElem.scrollTop);\n    \n    //This needs to run after the scrollTop is retrieved.\n    this.vcr.clear();\n\n    let listStartI = Math.floor((scrollTop - fixedHeaderHeight) / this.itemHeight);\n    listStartI = this.clamp(listStartI, 0, this.list.length);\n\n    let listEndI = Math.ceil((scrollTop - fixedHeaderHeight + listHeight) / this.itemHeight);\n    listEndI = this.clamp(listEndI, -1, this.list.length - 1);\n\n    for (let i = listStartI; i <= listEndI; i++) {\n      this.vcr.createEmbeddedView(this.tpl, { context: this.list[i], index: i });\n    }\n\n    this.beforeListElem.style.height = `${listStartI * this.itemHeight}px`;\n    this.afterListElem.style.height = `${(this.list.length - listEndI - 1) * this.itemHeight}px`;\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { LazyForDirective } from './lazy-for.directive';\n\n@NgModule({\n  declarations: [LazyForDirective],\n  exports: [LazyForDirective]\n})\nexport class LazyForModule { }\n"],"names":["Directive","ViewContainerRef","TemplateRef","IterableDiffers","Input","NgModule"],"mappings":"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"}